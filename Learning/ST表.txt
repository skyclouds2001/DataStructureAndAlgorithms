ST表（Sparse Table，稀疏表）是一种简单的数据结构，主要用来解决RMQ（Range Maximum/Minimum Query，区间最大/最小值查询）问题,亦可以处理符合结合律且可重复贡献的信息查询
RMQ问题，以最大值为例，是假如有一个数列A，给一个区间[l,r] ，要求max(Ai) { l<=l<=r }

时间复杂度：O(n logn)预处理、O(1)查询

ST表主要应用倍增的思想，使用一个二维数组f，对于范围内的所有f[a][b]，可以用动态规划的方法进行预处理先算出并存储 max(Ai) {a<=i<a+2^b}（本文中的区间都是离散意义下的，只包含整数，所以此区间也可以写成[a,a+2^b-1] ）。
查询时，再利用这些子区间算出待求区间的最大值

int f[MAXN][21]; // 第二维的大小根据数据范围决定，不小于log(MAXN)
for (int i = 1; i <= n; ++i)
    f[i][0] = read();		// 读入数据
for (int i = 1; i <= 20; ++i)
    for (int j = 1; j + (1 << i) - 1 <= n; ++j)
        f[j][i] = max(f[j][i - 1], f[j + (1 << (i - 1))][i - 1]);	//[j,j+2^i)=[j,j+2^(i-1) )&[j+2^(i-1),j+2^i)

for (int i = 0; i < m; ++i)
{
    int l = read(), r = read();
    int s = Log2[r - l + 1];	//区间划分
    printf("%d\n", max(f[l][s], f[r - (1 << s) + 1][s]));
}